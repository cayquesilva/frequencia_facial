# seu_projeto/docker-compose.yml
version: '3.8'

services:
  backend:
    image: cayquesilva/frequencia-backend:latest # Sua imagem do Docker Hub
    networks:
      - SimpliSoft           # Conecta à rede que o Traefik monitora
    volumes:
      # Persistir o diretório 'data' do backend (DB, imagens, embeddings)
      - backend_data_volume:/app/data
    environment:
      - FLASK_ENV=production
    deploy:
      replicas: 1
      labels:
        # Labels para o Traefik rotear o tráfego para este serviço (sua API)
        - "traefik.enable=true"
        - "traefik.http.routers.backend-api.rule=Host(`apifreq.academiaarius.com`)"
        - "traefik.http.routers.backend-api.entrypoints=web"
        - "traefik.http.routers.backend-api.entrypoints=websecure"
        - "traefik.http.routers.backend-api.tls.certresolver=myresolver"
        - "traefik.http.services.backend-api.loadbalancer.server.port=5000"
        - "traefik.http.services.backend-api.loadbalancer.timeout.duration=300s"

  frontend:
    image: cayquesilva/frequencia-frontend:latest # Sua imagem do Docker Hub
    networks:
      - SimpliSoft           # Conecta à rede que o Traefik monitora
    deploy:
      replicas: 1
      labels:
        # Labels para o Traefik rotear o tráfego para este serviço (seu Frontend Vue.js)
        - "traefik.enable=true"
        - "traefik.http.routers.frontend-app.rule=Host(`frequencia.academiaarius.com`)"
        - "traefik.http.routers.frontend-app.entrypoints=web"
        - "traefik.http.routers.frontend-app.entrypoints=websecure"
        - "traefik.http.routers.frontend-app.tls.certresolver=myresolver"
        - "traefik.http.services.frontend-app.loadbalancer.server.port=80"
        # Opcional, mas recomendado para SPAs com Nginx (reforcei isso antes):
        - "traefik.http.middlewares.frontend-redirect.redirectscheme.scheme=https"
        - "traefik.http.routers.frontend-app-http.rule=Host(`frequencia.academiaarius.com`)"
        - "traefik.http.routers.frontend-app-http.entrypoints=web"
        - "traefik.http.routers.frontend-app-http.middlewares=frontend-redirect@docker"
        - "traefik.http.routers.frontend-app-http.service=frontend-app"

networks:
  SimpliSoft:             # Refere-se à rede SimpliSoft existente
    external: true       # Indica que esta rede JÁ EXISTE e é gerenciada externamente

volumes:
  backend_data_volume:
    driver: local